#!/usr/bin/perl -w
#
# (c) 2004 Christoph Berg <cb@df7cb.de>
#
# This file was copied from example.pl from the MapMarker distribution:
#   Author  :  Guillaume Leclanche (Mo-Ize) <mo-ize@nul-en.info>
#   Version :  2.0 beta 1
#   Date    :  08 Feb 2003
# It is licensed under the GNU GPL.

# 2003-12-01 cb: uses @ARGV
# 2004-07-04 cb: cleaned up code, introduced config file

use strict;
use warnings;
use Getopt::Long;

use IrcMarkers::File;
use IrcMarkers::Map;

sub VERSION_MESSAGE {
	print "IrcMarkers v0.1 (C) 2004 Christoph Berg <cb\@df7cb.de>, GNU GPL.\n";
	exit 0;
}

sub HELP_MESSAGE {
	print "usage: $0 [-x west/east] [-y south/north] config [inputmap outputmap]\n";
	exit 0;
}

my $config = IrcMarkers::File->new;

my ($x, $y);
GetOptions(
	'x=s' => \$x,
	'y=s' => \$y,
	'q' => \$config->{quiet},
	help => sub { HELP_MESSAGE(); },
	version => sub { VERSION_MESSAGE(); },
) or exit(1);

HELP_MESSAGE() unless $ARGV[0];
$config->read($ARGV[0]);

if($x) { # after $config->read so -x can override lon
	$x =~ /(.*)\/(.*)/ or die "invalid -x format";
	($config->{west}, $config->{east}) = ($1, $2);
}
if($y) {
	$y =~ /(.*)\/(.*)/ or die "invalid -y format";
	($config->{south}, $config->{north}) = ($1, $2);
}

$config->{read} = $ARGV[1] if $ARGV[1];
$config->{write} = $ARGV[2] if $ARGV[2];

die "no input map" unless $config->{read};
die "no output map" unless $config->{write};

my $map = IrcMarkers::Map->new($config);

foreach my $marker (keys %{$config->{markers}}) {
	#print "$marker at $config->{markers}->{$marker}->{lon}/$config->{markers}->{$marker}->{lat}\n";
	$map->add($config->{markers}->{$marker}->{lon}, $config->{markers}->{$marker}->{lat}, $marker);
	#if($config->{markers}->{$marker}->{gpg}) {
	#		$map->add($config->{markers}->{$marker}->{lon}, $config->{markers}->{$marker}->{lat},
	#		$config->{markers}->{$marker}->{gpg}[0]);
	#}
}

if($config->{gpg}) { # there are gpg keys
	my $keys = join ' ', keys %{$config->{gpg}};
	open GPG, "gpg --list-sigs --with-colon --fixed-list-mode --fast-list-mode $keys |" or die "gpg: $!";
	my $key;
	while(<GPG>) {
		chomp;
		next if /^(rev|sub|tru|uat):/;
		if(/^pub::\d+:\d+:([0-9A-F]+):/) {
			$key = $1;
			warn "$key not related to any marker - did you use the long (16 char) keyid?\n" unless $config->{gpg}->{$key};
			delete $config->{gpg_not_found}->{$key};
		} elsif(/^sig:::\d+:([0-9A-F]+):/) {
			next unless $config->{gpg}->{$1}; # target not on map
			next if $key eq $1; # self-sig
			$config->{gpg_links}->{$key}->{$1} = 1;
		} else {
			warn "unknown gpg output: $_";
		}
	}

	foreach my $key (keys %{$config->{gpg_not_found}}) {
		warn "$config->{gpg_not_found}->{$key}: key $key was not found in gpg's keyring\n";
	}

	foreach my $key (keys %{$config->{gpg_links}}) {
		foreach my $target (keys %{$config->{gpg_links}->{$key}}) {
			my $arrow = "-->";
			if($config->{gpg_links}->{$target}->{$key}) {
				next if $target gt $key; # process only once
				$arrow = "<->";
			}
			next unless $config->{markers}->{$config->{gpg}->{$key}}->{lat};
			next unless $config->{markers}->{$config->{gpg}->{$target}}->{lat};
			#next unless $config->{gpg}->{$key} and $config->{gpg}->{$target};
			$map->link($config->{gpg}->{$key}, $config->{gpg}->{$target});
			print "$config->{gpg}->{$key} $arrow $config->{gpg}->{$target}\n" unless $config->{quiet};
		}
	}
}

foreach my $link (keys %{$config->{links}}) {
	#print "$marker at $config->{markers}->{$marker}->{lon}/$config->{markers}->{$marker}->{lat}\n";
	next unless $config->{markers}->{$link};
	foreach my $target (keys %{$config->{links}->{$link}}) {
		next unless $config->{markers}->{$target};
		$map->link($link, $target);
	}
}

$map->draw($config->{write});

__END__

=head1 NAME

B<ircmarkers> - place markers on maps at given coordinates

=head1 SYNOPSIS

B<ircmarkers> [-x I<west/east> -y I<south/north>] F<config> [F<inputmap> F<outputmap>]

=head1 DESCRIPTION

IrcMarkers takes a map in .png or .jpg format and a list of coordinates
and labels in xplanet format and places the labels on the map.
It was written to generate user maps of IRC channels.

=head1 OPTIONS

=head1 EXAMPLES

=head1 FILES

=head1 BUGS

None known.

=head1 NOTES

=head1 SEE ALSO

=over

=item *

MapMarkers: http://www.nul-en.info/mapmarkers/

=item *

xplanet: http://xplanet.sourceforge.net/

=item *

Image::WorldMap: http://www.astray.com/WorldMap/

=back

=head1 AUTHOR

IrcMarkers was written by Christoph Berg <cb@df7cb.de>.

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2004 Christoph Berg <cb@df7cb.de>

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License with the
Debian GNU/Linux distribution in file F</usr/share/common-licenses/GPL>; if not,
write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
Boston, MA  02111-1307  USA

IrcMarkers is an improved version of MapMarkers.

Copyright (C) 2003 Guillaume Leclanche (Mo-Ize) <mo-ize@nul-en.info>

The font provides with this package, fixed_01.ttf, has been created by the
Orgdot team, http://www.orgdot.com/aliasfonts/.

(C) 2001 http://www.orgdot.com
